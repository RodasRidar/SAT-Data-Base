USE BD_SAT_FORM
GO


/* PROCEDIMIENTO  PAR ACTUALIZAR  LOS DATOS DE  UN CONTRIBUYENTE*/

IF OBJECT_ID ('USP_ACTUALIZAR_CONTRIBUYENTE') IS NOT NULL
DROP PROCEDURE USP_ACTUALIZAR_CONTRIBUYENTE
GO

CREATE PROCEDURE USP_ACTUALIZAR_CONTRIBUYENTE
(
	@COD_CONT INT,
	@COD_TIP_DOC INT,
	@NUM_DOC_ID_CONT INT,
	@NOM_APE_RAZ_CONT CHAR(30),
	@COD_RAZ_SOC INT,
	@DIREC_CONT CHAR(80),
	@COD_DIST INT,
	@REF_DIREC_CONT CHAR(80)
)
AS    	 
	BEGIN
		IF EXISTS(SELECT*FROM CONTRIBUYENTE WHERE COD_CONT = @COD_CONT)
			BEGIN
				UPDATE CONTRIBUYENTE SET COD_CONT= @COD_CONT,
					COD_TIP_DOC=@COD_TIP_DOC,
					NUM_DOC_ID_CONT=@NUM_DOC_ID_CONT,
					NOM_APE_RAZ_CONT=@NOM_APE_RAZ_CONT,
					COD_RAZ_SOC=@COD_RAZ_SOC,
					DIREC_CONT=@DIREC_CONT,
					COD_DIST=@COD_DIST,
					REF_DIREC_CONT=@REF_DIREC_CONT 
				WHERE COD_CONT=@COD_CONT
			END
		ELSE
			PRINT 'NO EXISTE EL CÓDIGO DE CONTRIBUYENTE'
	END
GO

--CÓDIGO EXISTENTE
EXEC USP_ACTUALIZAR_CONTRIBUYENTE 10000001,3,50369708,'PEDRO AQUINO',3,'AV CAMINOS DEL INKANATO',101,'FRENTE A PLAZA VEA'
GO


--CÓDIGO INEXISTENTE
EXEC USP_ACTUALIZAR_CONTRIBUYENTE 10500000,3,50369708,'JUAN MORALES',3,'AV CAMINOS DEL INCA',101,'FRENTE A PLAZA VEA'
GO

--VISUALIZAR LA TABLA CONTRIBUYENTE PARA VERIFICAR LOS CAMBIOS
SELECT * FROM CONTRIBUYENTE
GO


/*	2. PROCEDIMIENTO PARA  INSERTAR UN REPRESENTANTE_LEGAL A LA BASE DE DATOS.
*/
IF OBJECT_ID('USP_INSERTAR_REPRESENTANTELEGAL') IS NOT NULL
	DROP PROCEDURE USP_INSERTAR_REPRESENTANTELEGAL
GO

CREATE PROCEDURE USP_INSERTAR_REPRESENTANTELEGAL
(
@NUM_DOC_REP INT,
@NOM_APE_RAZ_REP CHAR(30),
@COD_RAZ_SOC INT,
@TEL_REP VARCHAR(12),
@FIRM_REP CHAR(30),
@COD_TIP_DOC INT
)
AS
BEGIN
	IF EXISTS(SELECT * FROM REPRESENTANTE_LEGAL WHERE NUM_DOC_REP=@NUM_DOC_REP)
		PRINT 'YA EXITE UN REPRESENTANTE CON ESE CÓDIGO'
	ELSE 
		INSERT REPRESENTANTE_LEGAL VALUES(@NUM_DOC_REP,@NOM_APE_RAZ_REP,@COD_RAZ_SOC,@TEL_REP,@FIRM_REP,@COD_TIP_DOC )
END
GO

EXEC USP_INSERTAR_REPRESENTANTELEGAL 11234568,'LUIS TORPOCO',3,'945502461','NO',2
GO

--VISUALIZAR LA TABLA REPRESENTANTE LEGAL PARA VERIFICAR LOS CAMBIOS
SELECT * FROM REPRESENTANTE_LEGAL
GO

/*3.- PROCEDIMIENTO DE  ALMACENADO  QUE  ELIMINE UNA  APUESTA  MEDIANTE SU CODIGO*/

IF OBJECT_ID ('USP_ELIMINAR_APUESTA') IS  NOT NULL
BEGIN
	DROP PROC USP_ELIMINAR_APUESTA
END
GO
CREATE PROC USP_ELIMINAR_APUESTA(
	@COD_APU INT
)
AS
IF EXISTS (SELECT*FROM APUESTA WHERE COD_APU=@COD_APU)
	BEGIN
		DELETE FROM DECLARACIONIMPU_APUESTA
			WHERE COD_APU=@COD_APU
		DELETE FROM APUESTA
			WHERE COD_APU=@COD_APU

		
	END
ELSE
	PRINT 'EL CODIGO DE  APUESTA NO EXITE'
GO
--ELIMINAR CODIGO  EN  EXISTENCIA
EXEC USP_ELIMINAR_APUESTA 10007
GO
--ELMINAR  CON UN CODIGO  QUE NO EXISTE
EXEC USP_ELIMINAR_APUESTA 50006
GO


--VERIFICAR  EL  DELETE--
SELECT*FROM APUESTA
GO


/*4.-PROCEDIENTO  DE  ALMACENADO  QUE  BUSQUE QUE  CONTRIBUYENTES  TIENEN  EL  MISMO COD_DIST Y COD_TIP_DOC*/

IF  OBJECT_ID('USP_LIST_ContriXDostriXTipoDoc') IS NOT NULL
DROP PROC USP_LIST_ContriXDostriXTipoDoc
GO
CREATE PROC USP_LIST_ContriXDostriXTipoDoc(
@COD_TIP_DOC INT,
@COD_DIST INT
)
AS
IF EXISTS(SELECT*FROM CONTRIBUYENTE WHERE  COD_TIP_DOC= @COD_TIP_DOC AND COD_DIST=@COD_DIST)
			BEGIN
				SELECT C.NOM_APE_RAZ_CONT AS 'NOMBRE Y APELLIDO',T.NOM_TIP_DOC AS 'DOCUMENTO',C.NUM_DOC_ID_CONT AS 'NUMERO DOC_IDENTIDAD',D.NOM_DIST AS 'DISTRITO'
				FROM CONTRIBUYENTE AS C
				INNER JOIN DISTRITO AS D
				ON C.COD_DIST=D.COD_DIST
				INNER JOIN TIPO_DOCUMENTO AS T
				ON C.COD_TIP_DOC= T.COD_TIP_DOC
				WHERE D.COD_DIST=@COD_DIST AND T.COD_TIP_DOC=@COD_TIP_DOC
			END
	ELSE
		PRINT 'CONTRIBUYENTE  CON CUMPLE  CON LOS  PARAMETROS'
		GO

--BUSQUEDA  DE  CONTRIBUYENTES  CON  CODIGOS--
EXEC USP_LIST_ContriXDostriXTipoDoc  3,103
GO
--LLAMAMIENTO DE LISTA  CONTRIBUYENTE
SELECT*FROM CONTRIBUYENTE

/*5.-PROCEDIMIENTO  DE ALMACENADO  QUE  BUSQUE  EL VEHICULO MEDIANTE SU  CILINDRAJE  Y MARCA*/
IF OBJECT_ID('USP_LIST_VEHICULOSXCILINDRAJEXMARCA') IS NOT NULL 
DROP PROCEDURE USP_LIST_VEHICULOSXCILINDRAJEXMARCA  
 GO 
 CREATE PROCEDURE USP_LIST_VEHICULOSXCILINDRAJEXMARCA  (
	@CODMARCA INT, 
	@CODCILINDRAJE INT)
AS 
BEGIN 
   IF EXISTS (SELECT*FROM VEHICULO WHERE COD_MARCA_VEHI=@CODMARCA AND COD_CILIN_VEHI=@CODCILINDRAJE)
   BEGIN
   SELECT V.NUM_PLAC_VEHI AS 'NUMERO DE PLACA', MV.NOM_MARCA_VEHI AS 'MARCA'
   FROM VEHICULO AS V 
   INNER JOIN CILINDRAJE_VEHICULO AS CV
   ON CV.COD_CILIN_VEHI=V.COD_CILIN_VEHI 
   INNER JOIN MARCA_VEHICULO AS MV 
   ON MV.COD_MARCA_VEHI=V.COD_MARCA_VEHI
   WHERE  MV.COD_MARCA_VEHI=@CODMARCA AND  CV.COD_CILIN_VEHI=@CODCILINDRAJE
   END 
    ELSE 
	PRINT 'EL VEHÍCULO NO EXISTE' 
	END 
	GO
--BUSQUEDA  DE  VEHICULO  CON  CODIGO CILINDRAJE Y  CODIGO MARCA--
   EXECUTE USP_LIST_VEHICULOSXCILINDRAJEXMARCA 101,102
   GO 



/* 6.-PROCEDIMIENTO DE ALMACENADO QUE ELIMINE  UN VEHICULO*/ 
 IF OBJECT_ID('USP_ELIMINARVEHICULO') IS NOT NULL 
   DROP PROCEDURE USP_ELIMINARVEHICULO  
 GO 
   CREATE PROCEDURE USP_ELIMINARVEHICULO ( 
   @NUMPLACA INT, 
   @CODMODELO INT, 
   @CODMARCA INT
   )
   AS 
		 BEGIN 
IF EXISTS(SELECT*FROM VEHICULO AS V WHERE V.NUM_PLAC_VEHI=@NUMPLACA AND V.COD_MODE_VEHI=@CODMODELO AND V.COD_MARCA_VEHI=@CODMARCA)
BEGIN 
	 DELETE FROM VEHICULO 
	 WHERE NUM_PLAC_VEHI=@NUMPLACA AND COD_MODE_VEHI=@CODMODELO AND COD_MARCA_VEHI=@CODMARCA
	 END 
 ELSE 
	  PRINT 'EL VEHÍCULO NO EXISTE' 
	 END 
GO 

--ELIMINAR  VEHICULO--
EXECUTE USP_ELIMINARVEHICULO 248588,102,108 
GO 

--VERIFICAR  ELIMINACION--
SELECT * FROM VEHICULO 
GO


/*7.- PROCEDIMIENTO PARA ACTUALIZAR  DETALLE Y OBSERVACIONES*/
IF OBJECT_ID('USP_ACTUALIZAR_DETALLEXOBSERVACIONES') IS NOT NULL 
	DROP PROCEDURE USP_ACTUALIZAR_DETALLEXOBSERVACIONES 
GO 
CREATE PROCEDURE  USP_ACTUALIZAR_DETALLEXOBSERVACIONES 
(@CODOBSERV INT,
@DETAOBSERV VARCHAR(50)) 
AS 
BEGIN 
IF EXISTS (SELECT*FROM OBSERVACION WHERE COD_OBS=@CODOBSERV) 
	BEGIN 
UPDATE OBSERVACION SET COD_OBS=@CODOBSERV , DET_OBS=@DETAOBSERV 
WHERE COD_OBS=@CODOBSERV 
	 END 
ELSE  
	 PRINT 'ERROR DE INGRESO DE DATOS REQUERIDOS'
END 
GO 

--ACTUALIZAR  EL DETALLE Y OBSERVACION--
EXECUTE USP_ACTUALIZAR_DETALLEXOBSERVACIONES 1001 , 'DOCUMENTOS ROTOS'
GO  
--VERIFICAR  SI  FUE ACTUALIZADO--
	 SELECT * FROM OBSERVACION 
	 GO  


/*8.-PROCEDIMENTO  DE ALMACENADO QUE  BUSQUE  UN SOLICITANTE  MEDIANTE  NUMERO DE DOCUMENTO DE IDENTIDAD  Y RAZON SOCIAL*/ 
IF OBJECT_ID('USP_SOLICITANTEXNUMXRAZXTIP') IS NOT NULL 
DROP PROCEDURE USP_SOLICITANTEXNUMXRAZXTIP
GO 
CREATE PROCEDURE USP_SOLICITANTEXNUMXRAZXTIP( 
	 @RAZSOCIAL INT , 
	 @TIPDOC INT 
	 ) 
	 AS 
	 BEGIN 
	 IF EXISTS (SELECT*FROM SOLICITANTE WHERE COD_TIP_DOC=@TIPDOC AND COD_RAZ_SOC=@RAZSOCIAL ) 
	 BEGIN 
	 SELECT S.NOM_APE_RAZ_SOLI AS 'SOLICITANTE',TD.NOM_TIP_DOC AS 'DOCUMENTO', RS.NOM_RAZ_SOC AS 'RAZÓN SOCIAL'
	 FROM SOLICITANTE AS S 
	 INNER JOIN TIPO_DOCUMENTO AS TD 
	 ON S.COD_TIP_DOC=TD.COD_TIP_DOC 
	 INNER JOIN RAZON_SOCIAL AS RS 
	 ON S.COD_RAZ_SOC=RS.COD_RAZ_SOC 
	 WHERE RS.COD_RAZ_SOC=@RAZSOCIAL AND TD.COD_TIP_DOC=@TIPDOC AND S.TELEF_SOLI LIKE '9%'
	 END 
	 ELSE 
	 PRINT 'NO EXISTE SOLICITANTE' 
	 END  
	 GO 

--REALIZAR BUSQUEDA --
EXECUTE USP_SOLICITANTEXNUMXRAZXTIP 2,1
GO

/*9.-PROCEDIMIENTO DE ALMACENADO QUE LISTE  LOS REPRESENTANTE LEGAL POR  SI  CODIGO ,TIPO DE DOCUMENTO Y RAZON SOCIAL*/
IF OBJECT_ID ('Usp_List_RepLegalXcodRepXnumDocxRazSocRepxTipDoc') IS NOT NULL 
DROP PROC Usp_List_RepLegalXcodRepXnumDocxRazSocRepxTipDoc
GO

CREATE PROC Usp_List_RepLegalXcodRepXnumDocxRazSocRepxTipDoc
@NUM_TIP_DOC INT,
@NUM_DOC INT,
@RAZ_SOC INT
AS
BEGIN
	IF EXISTS (SELECT*FROM REPRESENTANTE_LEGAL WHERE  COD_TIP_DOC=@NUM_TIP_DOC AND NUM_DOC_REP=@NUM_DOC AND COD_RAZ_SOC=@RAZ_SOC )
		BEGIN
			SELECT RL.NOM_APE_RAZ_REP AS'NOMBRE REPRESENTANTE LEGAL', TD.NOM_TIP_DOC AS 'Tipo de Documento' , RL.NUM_DOC_REP AS 'Numero Identidad',RL.COD_RAZ_SOC AS 'Codigo Raz.Social'
			FROM TIPO_DOCUMENTO AS  TD
			INNER JOIN REPRESENTANTE_LEGAL AS RL
			ON RL.COD_TIP_DOC=TD.COD_TIP_DOC
			INNER JOIN RAZON_SOCIAL AS RS
			ON RS.COD_RAZ_SOC=RL.COD_RAZ_SOC
			WHERE RL.COD_TIP_DOC=@NUM_TIP_DOC AND RL.NUM_DOC_REP=@NUM_DOC AND RL.COD_RAZ_SOC=@RAZ_SOC
	
		END 
	ELSE 
		PRINT 'REPRESENTANTE LEGAL NO EXISTE'
END 
GO
--EJECUTAR LISTADO--
EXECUTE Usp_List_RepLegalXcodRepXnumDocxRazSocRepxTipDoc 3 ,31183211,3
GO


/*10.-PROCEDIMIENTO QUE ELIMINE REPRESENTANTE LEGAL MEDIANTE SU  NUMERO DE DOCUMENTO,CODIGO DE  RAZONSOCIAL  Y  FIRMA*/
IF OBJECT_ID ('Usp_Delete_RepLegalXcodRepXnumDocxRazSocRepxTipDoc') IS NOT NULL 
DROP PROC Usp_Delete_RepLegalXcodRepXnumDocxRazSocRepxTipDoc
GO

CREATE PROC Usp_Delete_RepLegalXcodRepXnumDocxRazSocRepxTipDoc
@NUM_TIP_DOC INT,
@NUM_DOC INT,
@RAZ_SOC INT,
@FIRM_REP VARCHAR (4)
AS
BEGIN
	IF EXISTS (SELECT*FROM REPRESENTANTE_LEGAL WHERE  COD_TIP_DOC=@NUM_TIP_DOC AND NUM_DOC_REP=@NUM_DOC AND COD_RAZ_SOC=@RAZ_SOC AND FIRM_REP=@FIRM_REP)
		BEGIN
			DELETE 
			FROM REPRESENTANTE_LEGAL
			WHERE COD_TIP_DOC=@NUM_TIP_DOC AND NUM_DOC_REP=@NUM_DOC AND COD_RAZ_SOC=@RAZ_SOC AND FIRM_REP=@FIRM_REP
	
		END 
	ELSE 
		PRINT 'No se pudo eliminar por incongruencia de datos'
END 
GO
--EJECUTAR  LA ELIMINACION--
EXECUTE Usp_Delete_RepLegalXcodRepXnumDocxRazSocRepxTipDoc 3 ,31183211,3,'NO'


--VERIFICAR  ELIMINACION--
SELECT* FROM REPRESENTANTE_LEGAL
GO



/*11.-PROCEDIMIENTO DE  INSERT DE REPRENTANTE  LEGAL*/
IF OBJECT_ID ('Usp_Insert_RepLegalXcodRepXnumDocxRazSocRepxTipDocxNumSol') IS NOT NULL 
DROP PROC Usp_Insert_RepLegalXcodRepXnumDocxRazSocRepxTipDocxNumSol
GO

CREATE PROC Usp_Insert_RepLegalXcodRepXnumDocxRazSocRepxTipDocxNumSol
@NUM_TIP_DOC INT,
@NUM_DOC INT,
@RAZ_SOC INT,
@FIRM_REP VARCHAR (4),
@NOM_REP CHAR (30),
@TEL_REP CHAR(12)
AS
BEGIN
	IF EXISTS (SELECT*FROM REPRESENTANTE_LEGAL WHERE  NUM_DOC_REP=@NUM_DOC AND NOM_APE_RAZ_REP=@NOM_REP AND TEL_REP=@TEL_REP)
		BEGIN
			PRINT 'No se pudo añadir Rep.Legal por datos EXISTENTES'
		END 
	ELSE 
		INSERT INTO REPRESENTANTE_LEGAL VALUES (@NUM_DOC,@NOM_REP,@RAZ_SOC,@TEL_REP,@FIRM_REP ,@NUM_TIP_DOC)
END 
GO
--EJECUTAR  INSERT--
EXECUTE Usp_Insert_RepLegalXcodRepXnumDocxRazSocRepxTipDocxNumSol 1 ,70559640,2,'NO','Julio Casas', '950874089'
--VERIFICAR  EL INSERT--
SELECT * FROM REPRESENTANTE_LEGAL
GO


/*12.-PROCEDIMIENTO PARA  ACTUALIZAR  DATOS  DE UN REPRESENTANTE  LEGAL*/
IF OBJECT_ID ('Usp_UpDate_RepLegalXcodRepXnumDocxRazSocRepxTipDocxNumSol') IS NOT NULL 
DROP PROC Usp_UpDate_RepLegalXcodRepXnumDocxRazSocRepxTipDocxNumSol
GO

CREATE PROC Usp_UpDate_RepLegalXcodRepXnumDocxRazSocRepxTipDocxNumSol

@FIRM_REP VARCHAR (4),
@TEL_REP CHAR(12),
@NUM_DOC INT 
AS
BEGIN
	IF EXISTS (SELECT*FROM REPRESENTANTE_LEGAL WHERE NUM_DOC_REP=@NUM_DOC )
		BEGIN
			UPDATE REPRESENTANTE_LEGAL SET
			FIRM_REP=@FIRM_REP,TEL_REP=@TEL_REP
			WHERE NUM_DOC_REP=@NUM_DOC
		END 
	ELSE 
			PRINT 'NO SE PUDO ACTUALIZAR,ERROR AL INGRESAR DATOS'
END 
GO
--EJECUTAR ACTUALIZACION--
EXECUTE Usp_UpDate_RepLegalXcodRepXnumDocxRazSocRepxTipDocxNumSol'No','110874089',36183211

--VERIFICAR ACTUALIZACION--
SELECT * FROM REPRESENTANTE_LEGAL
GO



/*13.- INSERTAR  UN ADMINISTRADO*/
IF OBJECT_ID('USP_INSERTAR_ADMINISTRADO') IS NOT NULL
BEGIN
	DROP PROCEDURE USP_INSERTAR_ADMINISTRADO
END
GO

CREATE PROCEDURE USP_INSERTAR_ADMINISTRADO
(
@COD_ADMIN INT,
@COD_TIP_DOC INT,
@NUM_DOC_ADMIN INT,
@NOM_APE_RAZ_ADMIN CHAR(30),
@COD_RAZ_SOC INT,
@TEL1_ADMIN VARCHAR(12),
@TEL2_ADMIN VARCHAR(12),
@EMAIL_ADMIN CHAR(80),
@DOM_ADMIN VARCHAR(50),
@RUT_ADMIN CHAR(10)
)
AS
BEGIN
	IF EXISTS(SELECT * FROM ADMINISTRADO WHERE TEL1_ADMIN=@TEL1_ADMIN AND TEL2_ADMIN=@TEL2_ADMIN)
		PRINT 'LOS TELEFONOS DEL ADMINISTRADO NO PUEDEN SER IGUALES'
	ELSE 
		INSERT ADMINISTRADO VALUES(@COD_ADMIN,@COD_TIP_DOC,@NUM_DOC_ADMIN,@NOM_APE_RAZ_ADMIN,@COD_RAZ_SOC,@TEL1_ADMIN,@TEL2_ADMIN,@EMAIL_ADMIN,@DOM_ADMIN,@RUT_ADMIN  )
END
GO
--EJECUTAR  INSERT---
EXEC  USP_INSERTAR_ADMINISTRADO  10012,1,89746311,'Mauro Urrutia',3,'6666666','8974615','Mauro_21@HOTMAIL.COM','Avda. de la Constitucion 2222','6695874'
GO

--VISUALIZAR LA TABLA REPRESENTANTE LEGAL PARA VERIFICAR LOS CAMBIOS
SELECT * FROM ADMINISTRADO
GO



--------------------------------VIEWS----------------------------------


/*1.-VIEW  QUE MUESTRE  CONTRIBUYENTE SU  NOMBRE  Y APELLIDOS ,TIPO DE DOCUMENTO Y NUMERO DE DOCUMENTO,  QUE  CUENTE  CUANTOS  HAY  POR  DISTRITO,PERO SOLO  LAS PERSONAS
QUE  SU NOMBRE  EMPICEN  CON LA  LETRA  "C"*/
IF  OBJECT_ID('VER_LISTACONTRIBUYENTESYDATOS') IS NOT  NULL
	DROP VIEW VER_LISTACONTRIBUYENTESYDATOS
GO
CREATE VIEW VER_LISTACONTRIBUYENTESYDATOS
AS
	SELECT C.NOM_APE_RAZ_CONT AS 'NOMBRE Y APELLIDO',D.NOM_DIST AS 'DISTRITO',T.NOM_TIP_DOC,C.NUM_DOC_ID_CONT,COUNT(*) as'CANTIDAD DE PERSONAS QUE  EMPIEZAN CON C'
	FROM CONTRIBUYENTE AS C
	INNER JOIN DISTRITO as D
	ON C.COD_DIST=D.COD_DIST
	INNER JOIN TIPO_DOCUMENTO AS T
	ON C.COD_TIP_DOC=T.COD_TIP_DOC
	GROUP BY C.NOM_APE_RAZ_CONT,D.NOM_DIST,T.NOM_TIP_DOC,C.NUM_DOC_ID_CONT
	GO
--VISTA PARA CONTRIBUYENTES  QUE  SU NOMBRE INICIE CON "C--
SELECT*FROM VER_LISTACONTRIBUYENTESYDATOS
WHERE [NOMBRE Y APELLIDO]  LIKE 'C%'
GO

/*2.-VIEW QUE  MUESTRE DATOS DEL  REPRESENTANTE LEGAL SU TIPO DE DOCUMENTO  Y RAZON SOCIAL , PERO  SOLO  LAS  QUE  TENGAN COMO 
RAZON SOCIAL  "PERSONA JURIDICA"*/
IF  OBJECT_ID('VER_LISTAREPRESENTySUSDATOS') IS NOT NULL
DROP VIEW VER_LISTAREPRESENTySUSDATOS
GO
CREATE VIEW VER_LISTAREPRESENTySUSDATOS
	AS
		SELECT R.NUM_DOC_REP AS 'NRO DE DOC REPRESENTANTE',R.NOM_APE_RAZ_REP AS 'NOMBRE Y APELLIDO',TD.NOM_TIP_DOC AS 'TIPO DE DOCUMENTO',RZ.NOM_RAZ_SOC AS 'RAZON SOCIAL'  
		FROM REPRESENTANTE_LEGAL AS R
		INNER JOIN TIPO_DOCUMENTO AS TD
		ON R.COD_TIP_DOC=TD.COD_TIP_DOC
		INNER JOIN RAZON_SOCIAL AS RZ
		ON R.COD_RAZ_SOC=RZ.COD_RAZ_SOC
		GROUP BY R.NUM_DOC_REP,R.NOM_APE_RAZ_REP,TD.NOM_TIP_DOC,RZ.NOM_RAZ_SOC
GO

--VISTA PARA REPRESENTANTES  QUE  USEN COMO RAZON SOCIAL "PERSONA JURIDICA" Y COMO TIPO DE DOCUMENTO "DNI"--
SELECT*FROM VER_LISTAREPRESENTySUSDATOS
WHERE [RAZON SOCIAL] ='PERSONA JURIDICA'  AND [TIPO DE DOCUMENTO] ='DNI'
GO


/*VIEW LOS  DATOS DE SOLICITANTES  QUE  SU  TELEFONO TERMINE  EN 6*/
IF OBJECT_ID('VER_SOLICITANTES') IS NOT NULL 
	BEGIN 
	DROP VIEW VER_SOLICITANTES 
	END 
	GO 
	CREATE VIEW VER_SOLICITANTES 
	AS 
	SELECT S.NOM_APE_RAZ_SOLI AS 'NOMBRE DE SOLICITANTE',TD.NOM_TIP_DOC AS 'TIPO DE DOCUMENTO',S.NUM_DOC_SOLI AS 'NÚMERO DE DOCUMENTO',RS.NOM_RAZ_SOC AS'RAZÓN SOCIAL',S.TELEF_SOLI 
	FROM SOLICITANTE AS S 
	INNER JOIN TIPO_DOCUMENTO AS TD 
	ON S.COD_TIP_DOC=TD.COD_TIP_DOC 
	INNER JOIN RAZON_SOCIAL AS RS 
	ON S.COD_RAZ_SOC=RS.COD_RAZ_SOC 
	GROUP BY S.NOM_APE_RAZ_SOLI ,S.TELEF_SOLI ,TD.NOM_TIP_DOC,S.NUM_DOC_SOLI,RS.NOM_RAZ_SOC
GO  

---VISTA  PARA  SOLICITANTES  QUE SU TELEFONO TERMINE  EN 6---
	 SELECT*FROM VER_SOLICITANTES 
	 WHERE  TELEF_SOLI LIKE '%_6'
GO

/*VIEW  PARA  VER DATOS  DE  ADQUISICION DE  VEHICULO */
   IF OBJECT_ID ('VER_VEHÍCULO') IS NOT NULL 
   BEGIN 
   DROP VIEW VER_VEHÍCULO 
   END
   GO 
   CREATE VIEW VER_VEHÍCULO 
   AS 
   SELECT V.NUM_DEC_JURA AS 'NÚMERO DE DECLARACIÓN JURADA',V.NUM_PLAC_VEHI AS 'NÚMERO DE PLACA' , MV.NOM_MARCA_VEHI AS 'MARCA' , MODVE.NOM_MODE_VEHI AS 'MODELO',V.VALOR_ADQ_VEHI
   FROM VEHICULO AS V 
   INNER JOIN MARCA_VEHICULO AS MV 
   ON V.COD_MARCA_VEHI=MV.COD_MARCA_VEHI 
   INNER JOIN MODELO_VEHICULO AS MODVE 
   ON V.COD_MODE_VEHI=MODVE.COD_MODE_VEHI 
   GROUP BY V.NUM_DEC_JURA,V.NUM_PLAC_VEHI,MV.NOM_MARCA_VEHI,MODVE.NOM_MODE_VEHI,V.VALOR_ADQ_VEHI 
   GO 


--VISTA DE  VEHICULO QUE  SU  VALOR ADQUIRIDO INICIE  EN "2"--
   SELECT*FROM VER_VEHÍCULO 
   WHERE VALOR_ADQ_VEHI LIKE '2%'  
   GO

/*VIEW  QUE LISTA LOS  REPRESENTANTES  LEGALES  QUE  SU  NUMERO DE  SOLICITUD  SEA  MAYOR  A 1006*/
IF OBJECT_ID ('View_RepLegal_NumSoli_NoAndTri')IS  NOT NULL
DROP VIEW View_RepLegal_NumSoli_NoAndTri
GO

CREATE VIEW View_RepLegal_NumSoli_NoAndTri
AS
SELECT RL.NOM_APE_RAZ_REP AS 'Nombre Rep.Legal',TD.NOM_TIP_DOC AS 'Tipo documento', RL.NUM_DOC_REP AS 'Numero de documento',
		RS.NOM_RAZ_SOC AS 'Nombre Razon Social',RL.TEL_REP'Telefono',RL.FIRM_REP AS'Firma',
		S.NUM_COD_SOL'Numero de solicitud a la cual corresponde'
FROM REPRESENTANTE_LEGAL AS RL
INNER JOIN RAZON_SOCIAL AS RS
ON RL.COD_RAZ_SOC=RS.COD_RAZ_SOC
INNER JOIN TIPO_DOCUMENTO AS TD
ON RL.COD_TIP_DOC=TD.COD_TIP_DOC
INNER JOIN SOLICITUD_NO_AND_TRIB AS S
ON S.NUM_DOC_REP = RL.NUM_DOC_REP
GO

--EJECUTAR LISTA LOS  REPRESENTANTES  LEGALES  QUE  SU  NUMERO DE  SOLICITUD  SEA  MAYOR  A 1006 --
SELECT*FROM View_RepLegal_NumSoli_NoAndTri
WHERE [Numero de solicitud a la cual corresponde] >1006
GO

/*VIEW  QUE  LISTE LAS  DECLARACIONES  JURADAS  VEHICULARES ,QUE  SU  OBSERVACION  SEA "SIN OBSERVACIONES"*/
IF OBJECT_ID ('View_DeclJurada_Vehi')IS  NOT NULL
DROP VIEW View_DeclJurada_Vehi
GO

CREATE VIEW View_DeclJurada_Vehi
AS
SELECT DJ.NUM_DEC_JURA AS'Numero de declaracion Jurada', TDJ.NOM_TIP_FORM_DECL_JURA as 'Tipo de declaracion jurada'
		, O.DET_OBS AS'Detalle de observacion',MV.NOM_MARCA_VEHI AS 'MARCA DEL VEHICULO',CV.NOM_CLASE_VEHI AS 'CLASE DE VEHICULO'
FROM DECLARACION_JURADA_VEHICULAR AS DJ
INNER JOIN TIPO_DECLA_JURADA AS TDJ
ON TDJ.COD_TIP_FORM_DECL_JURA=DJ.COD_TIP_FORM_DECL_JURA
INNER JOIN OBSERVACION AS O
ON O.COD_OBS=DJ.COD_OBS
INNER JOIN VEHICULO AS V
ON V.NUM_DEC_JURA=DJ.NUM_DEC_JURA
INNER JOIN MARCA_VEHICULO AS MV
ON MV.COD_MARCA_VEHI=V.COD_MARCA_VEHI
INNER JOIN CLASE_VEHICULO AS CV
ON CV.COD_CLASE_VEHI=V.COD_CLASE_VEHI
GO

---EJECUTAR  LISTADO ---
SELECT*FROM View_DeclJurada_Vehi
WHERE [Detalle de observacion] = 'SIN OBSERVACIONES'
GO

/*VIEW  QUE  LISTE DECLARACIONES  JURADAS VEHICULARES Y CUENTE  CUANTAS SON DE TIPO "ACTUALIZACION"*/
IF OBJECT_ID ('iew_DeclJurada_Vehi')IS  NOT NULL
DROP VIEW iew_DeclJurada_Vehi
GO

CREATE VIEW iew_DeclJurada_Vehi
AS
SELECT DJ.NUM_DEC_JURA AS'Numero de declaracion Jurada', TDJ.NOM_TIP_FORM_DECL_JURA as 'Tipo de declaracion jurada'
		, O.DET_OBS AS'Detalle de observacion',MV.NOM_MARCA_VEHI AS 'MARCA DEL VEHICULO',CV.NOM_CLASE_VEHI AS 'CLASE DE VEHICULO'
		,COUNT(*) AS'TIPO DECLARACION JURADA= ACTUALIZACION'
FROM DECLARACION_JURADA_VEHICULAR AS DJ
INNER JOIN TIPO_DECLA_JURADA AS TDJ
ON TDJ.COD_TIP_FORM_DECL_JURA=DJ.COD_TIP_FORM_DECL_JURA
INNER JOIN OBSERVACION AS O
ON O.COD_OBS=DJ.COD_OBS
INNER JOIN VEHICULO AS V
ON V.NUM_DEC_JURA=DJ.NUM_DEC_JURA
INNER JOIN MARCA_VEHICULO AS MV
ON MV.COD_MARCA_VEHI=V.COD_MARCA_VEHI
INNER JOIN CLASE_VEHICULO AS CV
ON CV.COD_CLASE_VEHI=V.COD_CLASE_VEHI
GROUP BY DJ.NUM_DEC_JURA , TDJ.NOM_TIP_FORM_DECL_JURA, O.DET_OBS ,MV.NOM_MARCA_VEHI ,CV.NOM_CLASE_VEHI 
GO
--EJECUTAR VIEW--
SELECT*FROM iew_DeclJurada_Vehi
WHERE [Tipo de declaracion jurada]='ACTUALIZACION'
GO